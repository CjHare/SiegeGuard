import {
  authorizationValidator,
  bodyValidator,
  contentTypeValidator,
  jsonParserSmallContent
} from '@just_another_developer/common-server'
import {Router} from 'express'
import {
  createChallenge,
  deleteChallenge,
  getChallenge,
  getChallenges
} from '../controller/challenge-controller'
import {GetChallengeRequest} from '../controller/request/get-challenge-request'
import {GetChallengesRequest} from '../controller/request/get-challenges-request'
import {CreateChallengesRequest} from '../controller/request/create-challenge-request'
import {DeleteChallengeRequest} from '../controller/request/delete-challenge-request'

export class ChallengeRoutes {
  private path = '/challenge'

  public addTo(router: Router): void {
    router.get(
      this.path,
      authorizationValidator(),
      contentTypeValidator(),
      jsonParserSmallContent,
      bodyValidator(GetChallengesRequest),
      getChallenges
    )
    router.post(
      this.path,
      authorizationValidator(),
      contentTypeValidator(),
      jsonParserSmallContent,
      bodyValidator(CreateChallengesRequest),
      createChallenge
    )
    router.get(
      `${this.path}/:challengeId`,
      authorizationValidator(),
      contentTypeValidator(),
      jsonParserSmallContent,
      bodyValidator(GetChallengeRequest),
      getChallenge
    )
    router.delete(
      `${this.path}/:challengeId`,
      authorizationValidator(),
      contentTypeValidator(),
      jsonParserSmallContent,
      bodyValidator(DeleteChallengeRequest),
      deleteChallenge
    )
  }
}
